var t=Object.defineProperty,i=(i,s,e)=>((i,s,e)=>s in i?t(i,s,{enumerable:!0,configurable:!0,writable:!0,value:e}):i[s]=e)(i,"symbol"!=typeof s?s+"":s,e);import{p as s}from"./phaser-CwoquCe3.js";!function(){const t=document.createElement("link").relList;if(!(t&&t.supports&&t.supports("modulepreload"))){for(const t of document.querySelectorAll('link[rel="modulepreload"]'))i(t);new MutationObserver((t=>{for(const s of t)if("childList"===s.type)for(const t of s.addedNodes)"LINK"===t.tagName&&"modulepreload"===t.rel&&i(t)})).observe(document,{childList:!0,subtree:!0})}function i(t){if(t.ep)return;t.ep=!0;const i=function(t){const i={};return t.integrity&&(i.integrity=t.integrity),t.referrerPolicy&&(i.referrerPolicy=t.referrerPolicy),"use-credentials"===t.crossOrigin?i.credentials="include":"anonymous"===t.crossOrigin?i.credentials="omit":i.credentials="same-origin",i}(t);fetch(t.href,i)}}();class e extends s.Scene{constructor(){super({key:"MainMenu"})}create(){const t=this.cameras.main.centerX,i=.3*this.cameras.main.height,s=this.add.text(t,i,"CREEPY CRAWLER",{fontFamily:'"Rubik Iso"',fontSize:"64px",color:"#ffffff"});s.setOrigin(.5);const e=this.add.text(t,i+200,"PLAY",{fontFamily:'"Rubik Iso"',fontSize:"48px",color:"#ffffff"});e.setOrigin(.5),e.setInteractive({useHandCursor:!0}),e.on("pointerover",(()=>{e.setScale(1.2),e.setTint(16711680)})),e.on("pointerout",(()=>{e.setScale(1),e.clearTint()})),e.on("pointerdown",(()=>{this.scene.start("Game")})),this.tweens.add({targets:s,y:i-10,duration:1500,yoyo:!0,repeat:-1,ease:"Sine.inOut"})}}class h{constructor(t){i(this,"grid"),i(this,"rooms",[]),i(this,"config"),i(this,"entranceX"),i(this,"entranceY"),i(this,"exitX"),i(this,"exitY"),this.config=t,this.grid=Array(t.gridSize).fill(!1).map((()=>Array(t.gridSize).fill(!0)))}createGrid(){return Array(this.config.gridSize).fill(!1).map((()=>Array(this.config.gridSize).fill(!0)))}generateLevel(){this.rooms=[],this.grid=this.createGrid();const t={x:0,y:0,width:this.config.gridSize,height:this.config.gridSize};for(let a=0;a<this.config.gridSize;a++)for(let t=0;t<this.config.gridSize;t++)this.grid[a][t]=!0;this.splitNode(t,0);const{entranceX:i,entranceY:s,exitX:e,exitY:h}=this.placeEntranceAndExit();return this.entranceX=i,this.entranceY=s,this.exitX=e,this.exitY=h,{grid:this.grid,entranceX:i,entranceY:s,exitX:e,exitY:h,rooms:this.rooms}}splitNode(t,i){if(i>=this.config.maxSplits)this.createRoom(t);else{if(t.width>t.height){const i=t.x+this.config.minRoomSize,s=t.x+t.width-this.config.minRoomSize,e=Math.floor(i+Math.random()*(s-i));t.left={x:t.x,y:t.y,width:e-t.x,height:t.height},t.right={x:e,y:t.y,width:t.width-(e-t.x),height:t.height}}else{const i=t.y+this.config.minRoomSize,s=t.y+t.height-this.config.minRoomSize,e=Math.floor(i+Math.random()*(s-i));t.left={x:t.x,y:t.y,width:t.width,height:e-t.y},t.right={x:t.x,y:e,width:t.width,height:t.height-(e-t.y)}}this.splitNode(t.left,i+1),this.splitNode(t.right,i+1)}}createRoom(t){const i=this.config.roomPadding,s=t.width-2*i,e=t.height-2*i;if(s<this.config.minRoomSize||e<this.config.minRoomSize)return;const h=Math.min(Math.floor(s+Math.random()*this.config.splitRandomness*s),this.config.maxRoomSize),a=Math.min(Math.floor(e+Math.random()*this.config.splitRandomness*e),this.config.maxRoomSize),r=Math.floor(t.x+i),o=Math.floor(t.y+i),n={x:r,y:o,width:h,height:a};this.rooms.push(n);for(let l=o;l<o+a;l++)for(let t=r;t<r+h;t++)t>=0&&t<this.config.gridSize&&l>=0&&l<this.config.gridSize&&(this.grid[l][t]=!1)}placeEntranceAndExit(){const t=Math.floor(this.config.gridSize/2),i=[...this.rooms].sort((()=>Math.random()-.5));let s=null,e=null;const h=(t,i)=>{const s=t.x+Math.floor(t.width/2),e=t.y+Math.floor(t.height/2),h=i.x+Math.floor(i.width/2),a=i.y+Math.floor(i.height/2);return Math.abs(s-h)+Math.abs(e-a)};for(let c=0;c<i.length;c++){for(let a=c+1;a<i.length;a++)if(h(i[c],i[a])>=t){s=i[c],e=i[a];break}if(s&&e)break}s&&e||(s=i[0],e=i[i.length-1]);const a=t=>{const i=t.x+2,s=t.x+t.width-2,e=t.y+2,h=t.y+t.height-2;if(s<=i||h<=e)return{x:t.x+Math.floor(t.width/2),y:t.y+Math.floor(t.height/2)};let a,r,o=0;do{if(a=Math.floor(i+Math.random()*(s-i+1)),r=Math.floor(e+Math.random()*(h-e+1)),o++,o>=20){a=t.x+Math.floor(t.width/2),r=t.y+Math.floor(t.height/2),a>=0&&a<this.config.gridSize&&r>=0&&r<this.config.gridSize&&(this.grid[r][a]=!1);break}}while(!0===this.grid[r][a]);return{x:a,y:r}},r=a(s),o=r.x,n=r.y,l=a(e),d=l.x,p=l.y;return o>=0&&o<this.config.gridSize&&n>=0&&n<this.config.gridSize&&(this.grid[n][o]=!1),d>=0&&d<this.config.gridSize&&p>=0&&p<this.config.gridSize&&(this.grid[p][d]=!1),{entranceX:o,entranceY:n,exitX:d,exitY:p}}connectRooms(t,i){const s={x:t.x+Math.floor(t.width/2),y:t.y+Math.floor(t.height/2)},e={x:i.x+Math.floor(i.width/2),y:i.y+Math.floor(i.height/2)},h=[],a=new Set,r=new Map,o=t=>`${t.x},${t.y}`,n=(t,i)=>Math.abs(t.x-i.x)+Math.abs(t.y-i.y),l=(t,i)=>this.grid[i][t]?1:3,d=t=>{const i=[],s=[{x:0,y:1},{x:0,y:-1},{x:1,y:0},{x:-1,y:0}];for(const e of s){const s=t.x+e.x,h=t.y+e.y;!(s>0&&s<this.config.gridSize-1&&h>0&&h<this.config.gridSize-1)||s===this.entranceX&&h===this.entranceY||s===this.exitX&&h===this.exitY||i.push({x:s,y:h})}return i},p={point:s,g:0,h:n(s,e),f:n(s,e)};p.f=p.g+p.h,h.push(p),r.set(o(s),p);let c=0;for(;h.length>0&&c<1e3;){c++;let t=0;for(let e=1;e<h.length;e++)h[e].f<h[t].f&&(t=e);const i=h[t];if(i.point.x===e.x&&i.point.y===e.y){const t=[];let s=i;for(;s;)t.unshift(s.point),s=s.parent;for(const i of t)this.grid[i.y][i.x];return t}h.splice(t,1),a.add(o(i.point));const s=d(i.point);for(const d of s){const t=o(d);if(a.has(t))continue;const s=l(d.x,d.y),p=i.g+s;let c=r.get(t);c?p<c.g&&(c.g=p,c.f=p+c.h,c.parent=i):(c={point:d,g:p,h:n(d,e),f:p+n(d,e),parent:i},h.push(c),r.set(t,c))}}return[]}getGrid(){return this.grid}}class a extends s.Scene{constructor(){super("Game"),i(this,"grid",[]),i(this,"GRID_SIZE",30),i(this,"CELL_SIZE",32),i(this,"player"),i(this,"playerSprite"),i(this,"PLAYER_SIZE",10),i(this,"PLAYER_SPEED",150),i(this,"targetX",0),i(this,"targetY",0),i(this,"isMoving",!1),i(this,"gridContainer"),i(this,"currentLevel",1),i(this,"levelText"),i(this,"exitX",0),i(this,"exitY",0),i(this,"entranceX",0),i(this,"entranceY",0),i(this,"exitPoint",{x:0,y:0}),i(this,"wallGroup"),i(this,"debugMode",!1),i(this,"debugText"),i(this,"debugGraphics"),i(this,"playerGridMarker"),i(this,"playerVisitedTiles",[]),i(this,"playerBrightLightZone",200),i(this,"playerDimLightZone",400),i(this,"PLAYER_MAX_HIT_POINTS",6),i(this,"playerHitPoints",this.PLAYER_MAX_HIT_POINTS),i(this,"player_saved_hit_points"),i(this,"playerLastHitTime",0),i(this,"playerInvincibilityDuration",1e3),i(this,"lastPlayerAngle",0),i(this,"graphics"),i(this,"rooms",[]),i(this,"roomTiles",[]),i(this,"roomConnections",new Set),i(this,"paths",new Map),i(this,"wallsToAdd",[]),i(this,"wallsToRemove",[]),i(this,"lastWallUpdate",0),i(this,"WALL_UPDATE_INTERVAL",200),i(this,"levelGenerator"),i(this,"lightingMask"),i(this,"mask"),i(this,"TOTAL_LEVELS",9),i(this,"level_layouts",[]),i(this,"GOING_BACK"),i(this,"lastDirection","down"),i(this,"frameTime",0),i(this,"frameDuration",200),i(this,"currentFrame",0),i(this,"sister_cry_frame",1),i(this,"sister_started_cry_timer",0),i(this,"sister_cry_duration",14e3),i(this,"sister_time",0),i(this,"sister_game_object"),i(this,"sister_sprite"),i(this,"sister_following"),i(this,"health_sprite_group"),i(this,"health_sprite"),i(this,"health_sprite2"),i(this,"health_sprite3"),i(this,"flashlight_sprite"),i(this,"flashlightBattery",100),i(this,"flashLightBatteryCycle",1e3),i(this,"flashLightBatteryCycleTimer",0),i(this,"flashlightMaxDistance",400),i(this,"flashlightMinDistance",200),i(this,"battery_sprite"),i(this,"battery_count",1),i(this,"battery_positions",[]),i(this,"batteries"),i(this,"batteryCountText"),i(this,"rechargeTimer",0),i(this,"rechargeInterval",2e3),i(this,"MAX_BATTERIES_PER_LEVEL",3),i(this,"MIN_BATTERIES_PER_LEVEL",1),i(this,"key_sprite"),i(this,"keys"),i(this,"key_count",0),i(this,"keyCountText"),i(this,"key_positions",[]),i(this,"MAX_KEYS_PER_LEVEL",3),i(this,"MIN_KEYS_PER_LEVEL",1),i(this,"key_starting_level",2),i(this,"bomb_sprite"),i(this,"bombs"),i(this,"bombs_active"),i(this,"bomb_active_positions",[]),i(this,"bomb_count",0),i(this,"bombCountText"),i(this,"bomb_positions",[]),i(this,"bomb_delay",500),i(this,"bomb_delay_timer",0),i(this,"bomb_explosion_radius",100),i(this,"bomb_placement_delay",1e3),i(this,"bomb_placement_delay_timer",0),i(this,"MAX_BOMBS_PER_LEVEL",3),i(this,"MIN_BOMBS_PER_LEVEL",1),i(this,"bomb_starting_level",4),i(this,"camera_sprite"),i(this,"camera_items"),i(this,"camera_items_positions",[]),i(this,"camera_count",0),i(this,"camera_count_text"),i(this,"camera_spawn_delay",1e4),i(this,"camera_last_used",0),i(this,"CAN_SPAWN",!0),i(this,"MAX_CAMERA_COUNT",2),i(this,"MIN_CAMERA_COUNT",1),i(this,"camera_starting_level",6),i(this,"lockedDoorPositions",[]),i(this,"lockedDoors"),i(this,"unlockedDoors",0),i(this,"MAX_LOCKED_DOORS",5),i(this,"locked_doors_per_level",[0,0,2,3,4,4,4,5,5]),i(this,"ghost_group"),i(this,"ghost_animation_delays",[]),i(this,"ghost_count",0),i(this,"max_ghosts",3),i(this,"ghosts_per_level",[0,0,0,1,2,3,4,5,6]),i(this,"goblin_group"),i(this,"goblin_animation_delays",[]),i(this,"goblin_count",0),i(this,"max_goblins",3),i(this,"goblins_per_level",[0,2,3,4,5,6,7,8,10]),i(this,"isTransitioning",!1),i(this,"isGeneratingLevel",!1),i(this,"exitSequenceInProgress",!1),i(this,"transitionPromise",null),i(this,"transitionStart",0),i(this,"note"),i(this,"noteText"),i(this,"notes",["They've taken my wife! I've got to get her back from this place! \n\n The walls are shifting... seems like I need my flashlight to get through. \n\n [Use <Backspace> to change batteries]","They're here... I can hear them... \n\n They won't get me so easily! \n\n [Goblins are afraid of the bright light]","There are these locked doors... \n\n I need to find the keys to open them! \n\n [Use keys to unlock doors]","What are these noises? I swear I can hear them moaning... \n\n These must be poor souls trapped here like me! I see them in the dark... \n\n [Ghosts disappear in the bright light]","Are these explosives? \n\n Great, I can use them to blow the walls open! \n\n [Use <Enter> to plant bombs]","Thank god I've taken my photo camera with me! \n\n It seems like the flashlight is all it takes to scare them all away! \n\n [Use <Space> to take a photo]","I feel like I'm getting close... \n\n Where is my wife?","I've heard her cry! \n\n I need to find her before it's too late! \n\n Hope that we both can make it out of here!","[You find two hugging skeletons]"]),i(this,"TRANSITION_DURATION",2500),i(this,"CAMERA_ZOOM_FACTOR",1.5),i(this,"batteryMeterGraphics"),i(this,"batteryText"),i(this,"BATTERY_METER_WIDTH",200),i(this,"BATTERY_METER_HEIGHT",30),i(this,"BATTERY_METER_PADDING",5),i(this,"uiCamera"),i(this,"gameTimer",0),i(this,"timerText"),i(this,"dialogContainer"),i(this,"dialogBackground"),i(this,"dialogText"),i(this,"dialogButton"),i(this,"isDialogOpen",!1),i(this,"previousTimeScale",1),i(this,"music"),i(this,"soundEffects",new Map),this.player_saved_hit_points=this.PLAYER_MAX_HIT_POINTS,this.GOING_BACK=!1,this.sister_following=!1}playSound(t,i={}){const s=this.soundEffects.get(t);s&&s.play({volume:i.volume??1})}findSafeSpot(t,i){for(let e=this.playerVisitedTiles.length-1;e>=0;e--){const t=this.playerVisitedTiles[e];if(!this.grid[t.y][t.x])return{x:t.x,y:t.y}}const s=[{x:1,y:0},{x:-1,y:0},{x:0,y:1},{x:0,y:-1},{x:1,y:1},{x:-1,y:1},{x:1,y:-1},{x:-1,y:-1}];for(const e of s){const s=t+e.x,h=i+e.y;if(s>=0&&s<this.GRID_SIZE&&h>=0&&h<this.GRID_SIZE&&!this.grid[h][s])return{x:s,y:h}}return null}redrawTile(){this.graphics.clear(),this.graphics.lineStyle(2,16777215),this.wallGroup.clear(!0,!0);let t=0;for(let i=0;i<this.GRID_SIZE;i++)for(let s=0;s<this.GRID_SIZE;s++)if(this.grid[i][s]||0==s||0==i||s==this.GRID_SIZE-1||i==this.GRID_SIZE-1){let e=!1;if(this.exitPoint.x==s&&this.exitPoint.y==i||this.entranceX==s&&this.entranceY==i)continue;if(0==s||0==i||s==this.GRID_SIZE-1||i==this.GRID_SIZE-1?(this.drawStraightTile(s,i),e=!0):this.grid[i][s]&&(this.drawJaggedTile(s,i),e=!0),e){t++;const e=this.add.rectangle(s*this.CELL_SIZE+this.CELL_SIZE/2,i*this.CELL_SIZE+this.CELL_SIZE/2,this.CELL_SIZE,this.CELL_SIZE);this.wallGroup.add(e)}}console.log(`Drew ${t} walls. Grid size: ${this.GRID_SIZE}x${this.GRID_SIZE}`)}drawStraightTile(t,i){const s=t*this.CELL_SIZE,e=i*this.CELL_SIZE;this.graphics.beginPath(),this.graphics.lineStyle(2,16777215),this.graphics.moveTo(s,e),this.graphics.lineTo(s+this.CELL_SIZE,e),this.graphics.lineTo(s+this.CELL_SIZE,e+this.CELL_SIZE),this.graphics.lineTo(s,e+this.CELL_SIZE),this.graphics.closePath(),this.graphics.stroke()}drawJaggedTile(t,i){const s=t*this.CELL_SIZE,e=i*this.CELL_SIZE;this.graphics.beginPath(),this.graphics.moveTo(s+4*Math.random(),e+4*Math.random());for(let h=0;h<4;h++){const t=s+(h+1)*(this.CELL_SIZE/4)+(4*Math.random()-2),i=e+(4*Math.random()-2);this.graphics.lineTo(t,i)}for(let h=0;h<4;h++){const t=s+this.CELL_SIZE+(4*Math.random()-2),i=e+(h+1)*(this.CELL_SIZE/4)+(4*Math.random()-2);this.graphics.lineTo(t,i)}for(let h=3;h>=0;h--){const t=s+h*(this.CELL_SIZE/4)+(4*Math.random()-2),i=e+this.CELL_SIZE+(4*Math.random()-2);this.graphics.lineTo(t,i)}for(let h=3;h>=0;h--){const t=s+(4*Math.random()-2),i=e+h*(this.CELL_SIZE/4)+(4*Math.random()-2);this.graphics.lineTo(t,i)}this.graphics.closePath(),this.graphics.stroke()}getRoomConnectionKey(t,i){const[s,e]=[this.rooms.indexOf(t),this.rooms.indexOf(i)];return`${Math.min(s,e)},${Math.max(s,e)}`}areRoomsConnected(t,i){return this.roomConnections.has(this.getRoomConnectionKey(t,i))}connectRooms(t,i){const s=this.levelGenerator.connectRooms(t,i);if(s.length>0){const e=this.getRoomConnectionKey(t,i);this.roomConnections.add(e),this.paths.set(e,s);for(const t of s)this.roomTiles[t.y][t.x]||this.wallsToRemove.push(t)}}isValidLockedDoorPosition(t,i){if(t>1&&t<this.GRID_SIZE-2&&i>1&&i<this.GRID_SIZE-2){var s=100;for(const e of this.lockedDoorPositions)e.x==t&&e.y==i||(s=Math.min(s,Math.abs(e.x-t)+Math.abs(e.y-i)));if(s<5)return!1;if(this.grid[i-1][t]&&this.grid[i+1][t]&&!this.grid[i][t-1]&&!this.grid[i][t+1])return!0;if(this.grid[i][t-1]&&this.grid[i][t+1]&&!this.grid[i-1][t]&&!this.grid[i+1][t])return!0}return!1}processWallChanges(t){if(!(t-this.lastWallUpdate<this.WALL_UPDATE_INTERVAL)){if(this.lastWallUpdate=t,this.wallsToAdd.length>0){const t=this.wallsToAdd.shift();t.x===this.exitPoint.x&&t.y===this.exitPoint.y||(this.grid[t.y][t.x]=!0)}if(this.wallsToRemove.length>0){const t=this.rooms.find((t=>t.x<=this.player.x/this.CELL_SIZE&&t.x+t.width>this.player.x/this.CELL_SIZE&&t.y<=this.player.y/this.CELL_SIZE&&t.y+t.height>this.player.y/this.CELL_SIZE));if(t){const i=this.rooms.indexOf(t),s=Array.from(this.paths.entries()).filter((([t])=>{const[s,e]=t.split(",").map(Number);return s===i||e===i}));if(s.length>0)for(const[t,e]of s){const t=this.wallsToRemove.find((t=>e.some((i=>i.x===t.x&&i.y===t.y))));if(t){const i=t,s=this.wallsToRemove.indexOf(i);s>-1&&this.wallsToRemove.splice(s,1),this.grid[i.y][i.x]=!1,this.isValidLockedDoorPosition(i.x,i.y)&&this.unlockedDoors+this.lockedDoors.getChildren().length<this.MAX_LOCKED_DOORS&&this.addLockedDoor(i.x,i.y);break}}}if(this.wallsToRemove.length>0){const t=this.wallsToRemove.shift();this.grid[t.y][t.x]=!1,this.isValidLockedDoorPosition(t.x,t.y)&&this.unlockedDoors+this.lockedDoors.getChildren().length<this.MAX_LOCKED_DOORS&&this.addLockedDoor(t.x,t.y)}}(this.wallsToAdd.length>0||this.wallsToRemove.length>0)&&this.redrawTile(),this.updateLockedDoors()}}getRoomConnectionCount(t){let i=0;for(const s of this.roomConnections){const[e,h]=s.split(",").map(Number);e!==this.rooms.indexOf(t)&&h!==this.rooms.indexOf(t)||i++}return i}connectUnconnectedRooms(){const t=this.rooms.filter((t=>0===this.getRoomConnectionCount(t)));for(;t.length>0;){const i=this.rooms.find((t=>t.x<=this.exitX&&t.x+t.width>this.exitX&&t.y<=this.exitY&&t.y+t.height>this.exitY)),s=this.rooms.find((t=>t.x<=this.player.x/this.CELL_SIZE&&t.x+t.width>this.player.x/this.CELL_SIZE&&t.y<=this.player.y/this.CELL_SIZE&&t.y+t.height>this.player.y/this.CELL_SIZE));let e;if(s&&0===this.getRoomConnectionCount(s)){e=s;const i=t.findIndex((t=>t===s));-1!==i&&t.splice(i,1)}else if(i&&0===this.getRoomConnectionCount(i)){e=i;const s=t.findIndex((t=>t===i));-1!==s&&t.splice(s,1)}else{const i=Math.floor(Math.random()*t.length);e=t[i],t.splice(i,1)}const h=this.rooms.filter((t=>t!==e&&this.getRoomConnectionCount(t)<2&&!this.areRoomsConnected(e,t)));if(0===h.length)continue;const a=h[Math.floor(Math.random()*h.length)];this.connectRooms(e,a)}}removeSomeConnections(){this.wallsToAdd=[];const t=Array.from(this.paths.entries());if(0===t.length)return;const i=Math.floor(t.length*(.3+.3*Math.random())),s=new Set;for(;s.size<i;){const i=Math.floor(Math.random()*t.length);s.add(t[i][0])}for(const[e,h]of t)if(s.has(e))for(const t of h)this.roomTiles[t.y][t.x]||this.wallsToAdd.push(t);for(const e of s)this.roomConnections.delete(e),this.paths.delete(e)}preload(){this.load.image("stair_up","assets/sprites/stair_up.png"),this.load.image("stair_down","assets/sprites/stair_down.png"),this.load.image("sister_down_idle","assets/sprites/sister_stand_down.png"),this.load.image("sister_down_walk1","assets/sprites/sister_walk_down_1.png"),this.load.image("sister_down_walk2","assets/sprites/sister_walk_down_2.png"),this.load.image("sister_left_idle","assets/sprites/sister_stand_side.png"),this.load.image("sister_left_walk1","assets/sprites/sister_walk_side_1.png"),this.load.image("sister_left_walk2","assets/sprites/sister_walk_side_2.png"),this.load.image("sister_up_idle","assets/sprites/sister_stand_up.png"),this.load.image("sister_up_walk1","assets/sprites/sister_walk_up_1.png"),this.load.image("sister_up_walk2","assets/sprites/sister_walk_up_2.png"),this.load.image("sister_dead","assets/sprites/sister_skeleton.png"),this.load.image("sister_cry1","assets/sprites/sister_cry_1.png"),this.load.image("sister_cry2","assets/sprites/sister_cry_2.png"),this.load.image("sister_cry3","assets/sprites/sister_cry_3.png"),this.load.image("sister_cry4","assets/sprites/sister_cry_4.png"),this.load.image("sister_cry5","assets/sprites/sister_cry_5.png"),this.load.image("sister_cry6","assets/sprites/sister_cry_6.png"),this.load.image("player_down_idle","assets/sprites/brother_stand_down.png"),this.load.image("player_down_walk1","assets/sprites/brother_walk_down_1.png"),this.load.image("player_down_walk2","assets/sprites/brother_walk_down_2.png"),this.load.image("player_left_idle","assets/sprites/brother_stand_side.png"),this.load.image("player_left_walk1","assets/sprites/brother_walk_side_1.png"),this.load.image("player_left_walk2","assets/sprites/brother_walk_side_2.png"),this.load.image("player_up_idle","assets/sprites/brother_stand_up.png"),this.load.image("player_up_walk1","assets/sprites/brother_walk_up_1.png"),this.load.image("player_up_walk2","assets/sprites/brother_walk_up_2.png"),this.load.image("player_dead","assets/sprites/brother_skeleton.png"),this.load.image("note","assets/sprites/note.png"),this.load.image("hugging_skeletons","assets/sprites/hugging_skeletons.png"),this.load.image("flashlight","assets/sprites/flashlight.png"),this.load.image("battery","assets/sprites/battery.png"),this.load.image("battery_ui","assets/sprites/battery_ui.png"),this.load.image("ghost_1","assets/sprites/ghost_1.png"),this.load.image("ghost_2","assets/sprites/ghost_2.png"),this.load.image("goblin_1","assets/sprites/goblin_1.png"),this.load.image("goblin_2","assets/sprites/goblin_2.png"),this.load.image("heart_full","assets/sprites/heart_full.png"),this.load.image("heart_half","assets/sprites/heart_half.png"),this.load.image("heart_empty","assets/sprites/heart_empty.png"),this.load.image("locked_door","assets/sprites/locked_door.png"),this.load.image("key","assets/sprites/key.png"),this.load.image("key_ui","assets/sprites/key_ui.png"),this.load.image("bomb_active_1","assets/sprites/bomb_active_1.png"),this.load.image("bomb_active_2","assets/sprites/bomb_active_2.png"),this.load.image("bomb_active_3","assets/sprites/bomb_active_3.png"),this.load.image("bomb_inactive","assets/sprites/bomb_inactive.png"),this.load.image("bomb_ui","assets/sprites/bomb_ui.png"),this.load.image("camera","assets/sprites/camera.png"),this.load.image("camera_ui","assets/sprites/camera_ui.png");try{this.load.audio("footstep","assets/sfx/footstep.wav"),this.load.audio("camera","assets/sfx/camera.wav"),this.load.audio("death","assets/sfx/death.wav"),this.load.audio("door","assets/sfx/door.wav"),this.load.audio("explosion","assets/sfx/explosion.wav"),this.load.audio("goblin","assets/sfx/goblin.wav"),this.load.audio("goblin_death","assets/sfx/goblin_death.wav"),this.load.audio("ghost","assets/sfx/ghost.wav"),this.load.audio("ghost_death","assets/sfx/ghost_death.wav"),this.load.audio("hurt","assets/sfx/hurt.wav"),this.load.audio("item","assets/sfx/item.wav"),this.load.audio("note","assets/sfx/note.wav"),this.load.audio("recharge","assets/sfx/recharge.wav"),this.load.audio("sister","assets/sfx/sister.wav"),this.load.audio("sister_cry","assets/sfx/sister_cry.wav"),this.load.audio("victory","assets/sfx/victory.wav"),this.load.audio("music","assets/music/upside down grin2.ogg"),this.load.audio("music_fast","assets/music/gi-i dark ambient techno.ogg")}catch(t){console.warn("Error loading audio files:",t)}}create(){var t;this.registry.has("GOING_BACK")&&(this.GOING_BACK=this.registry.get("GOING_BACK")),this.registry.has("sister_following")&&(this.sister_following=this.registry.get("sister_following")),this.registry.has("currentLevel")&&(this.currentLevel=this.registry.get("currentLevel")),this.player_saved_hit_points>0&&(this.playerHitPoints=this.player_saved_hit_points),this.max_ghosts=this.ghosts_per_level[this.currentLevel-1],this.max_goblins=this.goblins_per_level[this.currentLevel-1],this.GOING_BACK&&(this.max_ghosts=10,this.max_goblins=10),this.MAX_LOCKED_DOORS=this.locked_doors_per_level[this.currentLevel-1],this.physics.world.setBounds(0,0,this.GRID_SIZE*this.CELL_SIZE,this.GRID_SIZE*this.CELL_SIZE),this.wallGroup=this.physics.add.staticGroup(),this.lockedDoors=this.physics.add.staticGroup(),this.lightingMask=this.add.graphics(),this.lightingMask.setDepth(1),this.mask=new Phaser.Display.Masks.BitmapMask(this,this.lightingMask);const i=new h({gridSize:this.GRID_SIZE,minRoomSize:3,maxRoomSize:12,maxSplits:5,roomPadding:1,splitRandomness:.25});let s;this.GOING_BACK?s=this.level_layouts[this.currentLevel-1]:(s=i.generateLevel(),this.level_layouts.push(s)),this.grid=s.grid,this.entranceX=s.entranceX,this.entranceY=s.entranceY,this.exitX=s.exitX,this.exitY=s.exitY,this.exitPoint={x:this.exitX,y:this.exitY},this.rooms=s.rooms,this.levelGenerator=i,this.roomTiles=Array(this.GRID_SIZE).fill(!1).map((()=>Array(this.GRID_SIZE).fill(!1)));for(const h of this.rooms)for(let t=h.y;t<h.y+h.height;t++)for(let i=h.x;i<h.x+h.width;i++)this.grid&&this.grid[t]&&this.grid[t][i]&&!this.roomTiles[t]&&(this.roomTiles[t][i]=!0,this.grid[t][i]=!1);this.graphics=this.add.graphics(),this.graphics.lineStyle(2,16777215),this.gridContainer=this.add.container(0,0);var e=this.add.sprite(s.entranceX*this.CELL_SIZE+this.CELL_SIZE/2,s.entranceY*this.CELL_SIZE+this.CELL_SIZE/2,"stair_up");if(e.setDepth(1),e.setScale(2),this.gridContainer.add(e),this.currentLevel<this.TOTAL_LEVELS){var a=this.add.sprite(this.exitX*this.CELL_SIZE+this.CELL_SIZE/2,this.exitY*this.CELL_SIZE+this.CELL_SIZE/2,"stair_down");a.setDepth(1),a.setScale(2),this.gridContainer.add(a)}(this.GOING_BACK||this.currentLevel==this.TOTAL_LEVELS)&&(this.sister_sprite=this.add.sprite(this.exitX*this.CELL_SIZE+this.CELL_SIZE/2,this.exitY*this.CELL_SIZE+this.CELL_SIZE/2,"sister_down_idle"),this.sister_game_object=this.physics.add.sprite(this.exitX*this.CELL_SIZE+this.CELL_SIZE/2,this.exitY*this.CELL_SIZE+this.CELL_SIZE/2,"sister"),this.sister_game_object.setVisible(!1),console.log(this.sister_game_object),console.log(this.sister_sprite),console.log("Placed sister at: "+this.exitX*this.CELL_SIZE+this.CELL_SIZE/2+", "+this.exitY*this.CELL_SIZE+this.CELL_SIZE/2),this.sister_sprite.setDepth(1e3),this.sister_sprite.setMask(this.mask),this.GOING_BACK&&(this.sister_following=!0)),this.redrawTile();let r=s.entranceX*this.CELL_SIZE+this.CELL_SIZE/2,o=s.entranceY*this.CELL_SIZE+this.CELL_SIZE/2;this.GOING_BACK&&(r=this.exitX*this.CELL_SIZE+this.CELL_SIZE/2,o=this.exitY*this.CELL_SIZE+this.CELL_SIZE/2,this.sister_game_object&&(this.sister_game_object.setPosition(r,o),this.sister_sprite.setPosition(r,o))),this.player=this.physics.add.sprite(r,o,"player"),console.log("Player created at: "+r+", "+o),console.log("Sister following: "+this.sister_following),console.log("Sister sprite: "+this.sister_sprite),this.player.setVisible(!1),this.player.setCircle(this.PLAYER_SIZE,this.PLAYER_SIZE,this.PLAYER_SIZE),this.player.setOffset(this.PLAYER_SIZE/2,this.PLAYER_SIZE/2),this.playerSprite=this.add.sprite(r,o,"player_down_idle"),this.playerSprite.setDepth(1),this.physics.add.collider(this.player,this.wallGroup),this.physics.add.collider(this.player,this.lockedDoors),this.gridContainer.setMask(this.mask),this.graphics.setMask(this.mask),this.player.setMask(this.mask),this.cameras.main.startFollow(this.player),this.cameras.main.setZoom(2),this.levelText=this.add.text(20,20,`Level: ${this.currentLevel}`,{fontFamily:"Arial",backgroundColor:"#000000",padding:{left:10,right:10,top:5,bottom:5},fontSize:"24px",color:"#ffffff"}),this.levelText.setScrollFactor(0),this.levelText.setDepth(100),this.timerText=this.add.text(this.scale.width-20,20,"00:00",{fontFamily:"Arial",backgroundColor:"#000000",padding:{left:10,right:10,top:5,bottom:5},fontSize:"24px",color:"#ffffff"}),this.timerText.setOrigin(1,0),this.timerText.setScrollFactor(0),this.timerText.setDepth(100),this.isTransitioning||(this.input.on("pointerdown",(t=>{0===t.button&&(this.isMoving=!0,this.updateTargetPosition(t))})),this.input.on("pointermove",(t=>{this.isMoving&&t.isDown&&0===t.button?this.updateTargetPosition(t):this.isMoving=!1})),this.input.on("pointerup",(t=>{0===t.button&&(this.isMoving=!1,this.player.setVelocity(0,0))}))),this.debugGraphics=this.add.graphics(),this.physics.world.createDebugGraphic(),this.physics.world.debugGraphic.setVisible(!1),this.playerGridMarker=this.add.rectangle(0,0,this.CELL_SIZE,this.CELL_SIZE,65280,.3),this.playerGridMarker.setVisible(!1),this.playerGridMarker.setDepth(1),this.debugText=this.add.text(16,60,"",{fontSize:"24px",color:"#ffffff",backgroundColor:"#000000",padding:{left:10,right:10,top:5,bottom:5}}),this.debugText.setScrollFactor(0),this.debugText.setDepth(1e3),this.debugText.setVisible(this.debugMode),null==(t=this.input.keyboard)||t.on("keydown-T",(()=>{this.debugMode=!this.debugMode,this.physics.world.debugGraphic.setVisible(this.debugMode),this.playerGridMarker.setVisible(this.debugMode),this.debugText.setText("Debug Mode: ON"),this.debugText.setVisible(this.debugMode),this.debugMode||this.debugGraphics.clear()})),this.health_sprite_group=this.add.container(100,this.scale.height-35),this.health_sprite=this.add.sprite(0,0,"heart_full"),this.health_sprite2=this.add.sprite(20,0,"heart_full"),this.health_sprite3=this.add.sprite(40,0,"heart_full"),this.health_sprite_group.add(this.health_sprite),this.health_sprite_group.add(this.health_sprite2),this.health_sprite_group.add(this.health_sprite3),this.health_sprite_group.setDepth(1e3),this.health_sprite_group.setScale(2),this.cameras.main.ignore(this.health_sprite_group),this.batteryMeterGraphics=this.add.graphics(),this.flashlight_sprite=this.add.sprite(this.scale.width-250,this.scale.height-35,"flashlight"),this.flashlight_sprite.setDepth(1e3),this.flashlight_sprite.setScale(2),this.batteryMeterGraphics.setScrollFactor(0),this.batteryMeterGraphics.setDepth(1e3),this.battery_sprite=this.add.sprite(this.scale.width-350,this.scale.height-35,"battery_ui"),this.battery_sprite.setDepth(1e3),this.battery_sprite.setScale(2),this.batteryCountText=this.add.text(this.scale.width-320,this.scale.height-50,"0",{fontSize:"22px",fontStyle:"bold",color:"#ffffff",backgroundColor:"#000000",padding:{left:12,right:12,top:6,bottom:6}}),this.key_sprite=this.add.sprite(this.scale.width-450,this.scale.height-35,"key_ui"),this.key_sprite.setDepth(1e3),this.key_sprite.setScale(2),this.keyCountText=this.add.text(this.scale.width-420,this.scale.height-50,"0",{fontSize:"22px",fontStyle:"bold",color:"#ffffff",backgroundColor:"#000000",padding:{left:12,right:12,top:6,bottom:6}}),this.bomb_sprite=this.add.sprite(this.scale.width-550,this.scale.height-35,"bomb_ui"),this.bomb_sprite.setDepth(1e3),this.bomb_sprite.setScale(2),this.bombCountText=this.add.text(this.scale.width-520,this.scale.height-50,"0",{fontSize:"22px",fontStyle:"bold",color:"#ffffff",backgroundColor:"#000000",padding:{left:12,right:12,top:6,bottom:6}}),this.camera_sprite=this.add.sprite(this.scale.width-650,this.scale.height-35,"camera_ui"),this.camera_sprite.setDepth(1e3),this.camera_sprite.setScale(2),this.camera_count_text=this.add.text(this.scale.width-620,this.scale.height-50,"0",{fontSize:"22px",fontStyle:"bold",color:"#ffffff",backgroundColor:"#000000",padding:{left:12,right:12,top:6,bottom:6}}),this.uiCamera=this.cameras.add(0,0,this.scale.width,this.scale.height),this.uiCamera.setScroll(0,0),this.uiCamera.setZoom(1),this.uiCamera.ignore(this.graphics),this.uiCamera.ignore(this.gridContainer),this.uiCamera.ignore(this.player),this.uiCamera.ignore(this.playerSprite),this.uiCamera.ignore(this.lightingMask),this.uiCamera.ignore(this.debugGraphics),this.uiCamera.ignore(this.physics.world.debugGraphic),this.uiCamera.ignore(this.playerGridMarker),this.sister_sprite&&this.uiCamera.ignore(this.sister_sprite),this.batteryText=this.add.text(0,0,"100%",{fontSize:"24px",color:"#ffffff",backgroundColor:"#000000",padding:{left:5,right:5,top:2,bottom:2}}),this.batteryText.setScrollFactor(0),this.batteryText.setDepth(1e3),this.cameras.main.ignore(this.health_sprite_group),this.cameras.main.ignore(this.batteryMeterGraphics),this.cameras.main.ignore(this.batteryText),this.cameras.main.ignore(this.flashlight_sprite),this.cameras.main.ignore(this.battery_sprite),this.cameras.main.ignore(this.batteryCountText),this.cameras.main.ignore(this.key_sprite),this.cameras.main.ignore(this.keyCountText),this.cameras.main.ignore(this.bomb_sprite),this.cameras.main.ignore(this.bombCountText),this.cameras.main.ignore(this.camera_sprite),this.cameras.main.ignore(this.camera_count_text);const n=()=>{const t=this.scale.width,i=this.scale.height;this.uiCamera.setViewport(0,0,t,i),this.updateBatteryMeter(t,i)};this.scale.on("resize",n),n(),this.lockedDoors=this.physics.add.staticGroup(),this.batteries=this.physics.add.group(),this.keys=this.physics.add.group(),this.bombs=this.physics.add.group(),this.bombs_active=this.physics.add.group(),this.camera_items=this.physics.add.group(),this.ghost_group=this.physics.add.group({bounceX:.5,bounceY:.5,collideWorldBounds:!0}),this.goblin_group=this.physics.add.group({bounceX:.5,bounceY:.5,collideWorldBounds:!0}),this.spawnItems(),this.batteries.getChildren().forEach((t=>{this.uiCamera.ignore(t)})),this.keys.getChildren().forEach((t=>{this.uiCamera.ignore(t)})),this.bombs.getChildren().forEach((t=>{this.uiCamera.ignore(t)})),this.camera_items.getChildren().forEach((t=>{this.uiCamera.ignore(t)})),this.ghost_group.getChildren().forEach((t=>{this.uiCamera.ignore(t)})),this.goblin_group.getChildren().forEach((t=>{this.uiCamera.ignore(t)})),this.physics.add.overlap(this.player,this.batteries,this.handleBatteryCollection,void 0,this),this.physics.add.overlap(this.player,this.keys,this.handleKeyCollection,void 0,this),this.physics.add.overlap(this.player,this.bombs,this.handleBombCollection,void 0,this),this.physics.add.overlap(this.player,this.camera_items,this.handleCameraItemCollection,void 0,this),this.physics.add.overlap(this.player,this.lockedDoors,this.handleLockedDoorInteraction,void 0,this),this.createDialogSystem(),1!==this.currentLevel||this.GOING_BACK||this.showDialog("Zack! Your sister Ashley is kidnapped by goblins! Find her and lead her out of the dungeon until your flashlight runs out!","Let's go!",(()=>{}));try{const t=["footstep","camera","death","door","explosion","goblin","goblin_death","ghost","ghost_death","hurt","item","note","recharge","sister","sister_cry","victory"];for(const i of t)this.cache.audio.exists(i)&&this.soundEffects.set(i,this.sound.add(i));this.cache.audio.exists("music")&&!this.GOING_BACK?(this.music=this.sound.add("music"),this.music.play({loop:!0,volume:.5})):this.cache.audio.exists("music_fast")&&this.GOING_BACK&&(this.music.stop(),this.music=this.sound.add("music_fast"),this.music.play({loop:!0,volume:.5}))}catch(l){console.warn("Error initializing audio:",l)}}updateTargetPosition(t){const i=this.cameras.main.getWorldPoint(t.x,t.y);this.targetX=i.x,this.targetY=i.y}checkExitReached(){if(this.GOING_BACK){const t=Math.floor(this.player.x/this.CELL_SIZE),i=Math.floor(this.player.y/this.CELL_SIZE);return t===this.entranceX&&i===this.entranceY}{const t=Math.floor(this.player.x/this.CELL_SIZE),i=Math.floor(this.player.y/this.CELL_SIZE);return t===this.exitX&&i===this.exitY}}updateSisterSprite(t){this.sister_sprite&&!this.GOING_BACK?(this.sister_time+=t,this.sister_time>this.frameDuration/2&&(this.sister_time=0,this.sister_cry_frame++,this.sister_cry_frame>6&&(this.sister_cry_frame=1)),this.sister_sprite.setTexture("sister_cry"+this.sister_cry_frame),this.sister_time>this.sister_started_cry_timer+this.sister_cry_duration&&(this.playSound("sister_cry",{volume:.5}),this.sister_started_cry_timer=this.sister_time)):this.GOING_BACK&&!this.sister_sprite&&(this.sister_sprite=this.add.sprite(this.player.x,this.player.y,"sister"),this.sister_sprite.setDepth(1e3),this.uiCamera.ignore(this.sister_sprite))}nextLevel(){const t=this.GOING_BACK,i=this.sister_following;if(this.GOING_BACK&&1!=this.currentLevel)this.currentLevel--;else{if(this.GOING_BACK&&1==this.currentLevel)return this.playSound("victory"),this.music.stop(),void this.showDialog("You've saved your sister, Zack! \n\n You are a hero! \n\n Total time: "+this.timerText.text,"Restart",(()=>{this.resetGame()}));this.currentLevel++}this.registry.set("GOING_BACK",t),this.registry.set("sister_following",i),this.registry.set("currentLevel",this.currentLevel),this.wallsToAdd=[],this.wallsToRemove=[],this.roomConnections.clear(),this.paths.clear(),this.playerVisitedTiles=[],this.exitX=0,this.exitY=0,this.exitPoint={x:0,y:0},this.wallGroup.clear(!0,!0),this.lockedDoors.clear(!0,!0),this.graphics.clear(),this.debugGraphics.clear(),this.debugMode=!1,this.physics.world.debugGraphic.setVisible(!1),this.playerGridMarker.setVisible(!1),this.debugText.setVisible(this.debugMode),this.isMoving=!1,this.targetX=0,this.targetY=0,this.grid=[],this.rooms=[],this.roomTiles=[],this.isTransitioning=!1,this.isGeneratingLevel=!1,this.exitSequenceInProgress=!1,this.transitionPromise=null,this.battery_positions=[],this.ghost_animation_delays=[],this.goblin_animation_delays=[],this.scene.restart()}async playExitTransition(){if(this.transitionStart=0,this.transitionPromise)return this.transitionPromise;this.transitionPromise=new Promise(((t,i)=>{try{this.isTransitioning=!0;let i=this.exitX*this.CELL_SIZE+this.CELL_SIZE/2,s=this.exitY*this.CELL_SIZE+this.CELL_SIZE/2;this.isMoving=!0,this.GOING_BACK?(i=this.entranceX*this.CELL_SIZE+this.CELL_SIZE/2,s=this.entranceY*this.CELL_SIZE+this.CELL_SIZE/2,this.player.setVelocity(-1,0),this.lastDirection="left"):(this.player.setVelocity(1,0),this.lastDirection="right"),this.player.setPosition(i,s),this.playerSprite.setPosition(i,s);let e=0;const h=3,a=()=>{e++,e>=h&&t()},r={x:this.cameras.main.scrollX-this.player.x,y:this.cameras.main.scrollY-this.player.y};this.tweens.add({targets:this.cameras.main,zoom:this.cameras.main.zoom*this.CAMERA_ZOOM_FACTOR,duration:this.TRANSITION_DURATION,ease:"Quad.InOut",onUpdate:()=>{this.cameras.main.scrollX=this.player.x+r.x,this.cameras.main.scrollY=this.player.y+r.y},onComplete:a}),this.tweens.add({targets:this,playerBrightLightZone:0,playerDimLightZone:0,duration:this.TRANSITION_DURATION,ease:"Linear",onComplete:a}),this.GOING_BACK?this.tweens.add({targets:this.playerSprite,scale:1.5,duration:this.TRANSITION_DURATION,ease:"Linear",onComplete:a}):this.tweens.add({targets:this.playerSprite,scale:0,duration:this.TRANSITION_DURATION,ease:"Linear",onComplete:a})}catch(s){i(s)}}));try{await this.transitionPromise}finally{this.isTransitioning=!1,this.transitionPromise=null}}async handleExit(){if(this.exitSequenceInProgress||this.isTransitioning||this.isGeneratingLevel)return;const t=this.checkExitReached();if(t&&(this.currentLevel!=this.TOTAL_LEVELS||this.GOING_BACK&&1!=this.currentLevel))try{this.exitSequenceInProgress=!0,this.isTransitioning=!0,this.isGeneratingLevel=!0,await this.playExitTransition(),await this.nextLevel(),await this.resetPlayerAndStates()}catch(i){console.error("Error during exit sequence:",i)}finally{this.isTransitioning=!1,this.isGeneratingLevel=!1,this.exitSequenceInProgress=!1,this.transitionPromise=null}else t&&!this.GOING_BACK&&this.currentLevel==this.TOTAL_LEVELS&&(this.playSound("sister"),this.cache.audio.exists("music_fast")&&(this.music=this.sound.add("music_fast"),this.music.play({loop:!0,volume:.5}),this.max_ghosts=10,this.max_goblins=20),this.showDialog("'Zack! It's you, I am so scared'! \n\n 'Don't worry, Ashley! Let's get out of here!'","Follow me!",(()=>{this.GOING_BACK=!0,this.sister_following=!0,this.playerHitPoints=6})))}async resetPlayerAndStates(){return new Promise((t=>{this.cameras.main.fadeIn(500,0,0,0),this.tweens.add({targets:this.cameras.main,zoom:1,duration:500,ease:"Quad.Out"}),this.tweens.add({targets:this.lightingMask,radius:this.playerBrightLightZone,alpha:1,duration:500,ease:"Quad.Out"}),this.time.delayedCall(500,(()=>{t()}))}))}update(t,i){if(this.isDialogOpen)return;this.updatePlayerHealthUI(),this.CAN_SPAWN=t-this.camera_last_used>this.camera_spawn_delay,this.gameTimer+=i/1e3,this.updateTimerDisplay(),this.updateSisterSprite(i),this.bomb_delay_timer+=i,this.bomb_delay_timer>this.bomb_delay&&(this.updateBombsActive(),this.bomb_delay_timer=0),this.player_saved_hit_points=this.playerHitPoints,this.processWallChanges(t),this.updateFlashlight(t),this.lightingMask.clear();const s=this.player.body.velocity;let e=0;e=0!==s.x||0!==s.y?Math.atan2(s.y,s.x):this.lastPlayerAngle||0,this.lastPlayerAngle=e;const h=Phaser.Math.RadToDeg(e),a=h-60,r=h+60;this.lightingMask.fillStyle(16777215,.4),this.lightingMask.beginPath(),this.lightingMask.moveTo(this.player.x,this.player.y),this.lightingMask.arc(this.player.x,this.player.y,this.playerBrightLightZone,Phaser.Math.DegToRad(a),Phaser.Math.DegToRad(r)),this.lightingMask.closePath(),this.lightingMask.fill(),this.lightingMask.fillStyle(16777215,.1),this.lightingMask.beginPath(),this.lightingMask.moveTo(this.player.x,this.player.y),this.lightingMask.arc(this.player.x,this.player.y,this.playerDimLightZone,Phaser.Math.DegToRad(a),Phaser.Math.DegToRad(r)),this.lightingMask.closePath(),this.lightingMask.fill(),this.lightingMask.fillStyle(16777215,.1),this.lightingMask.beginPath(),this.lightingMask.moveTo(this.player.x,this.player.y),this.lightingMask.arc(this.player.x,this.player.y,Math.max(this.playerDimLightZone/10,10),0,Phaser.Math.DegToRad(360)),this.lightingMask.closePath(),this.lightingMask.fill(),this.updateGhosts(t),this.updateGoblins(t);const o=Math.floor(this.player.x/this.CELL_SIZE),n=Math.floor(this.player.y/this.CELL_SIZE);if(this.playerGridMarker.setPosition(o*this.CELL_SIZE+this.CELL_SIZE/2,n*this.CELL_SIZE+this.CELL_SIZE/2),this.grid[n][o]){const t=this.findSafeSpot(o,n);t&&(this.player.setPosition(t.x*this.CELL_SIZE+this.CELL_SIZE/2,t.y*this.CELL_SIZE+this.CELL_SIZE/2),this.isMoving=!1,this.player.setVelocity(0,0))}const l={x:o,y:n},d=this.playerVisitedTiles.findIndex((t=>t.x===l.x&&t.y===l.y));if(-1!==d&&this.playerVisitedTiles.splice(d,1),this.playerVisitedTiles.push(l),this.debugMode&&(this.debugGraphics.clear(),this.debugGraphics.lineStyle(2,65280),this.playerVisitedTiles.forEach(((t,i)=>{const s=.3+i/this.playerVisitedTiles.length*.7;this.debugGraphics.fillStyle(65280,s),this.debugGraphics.fillRect(t.x*this.CELL_SIZE,t.y*this.CELL_SIZE,this.CELL_SIZE,this.CELL_SIZE)}))),this.input.keyboard&&this.input.keyboard.addKey(Phaser.Input.Keyboard.KeyCodes.ESC).isDown&&this.showDialog("Game paused","Resume",(()=>{})),!this.isTransitioning&&this.input.keyboard&&this.input.keyboard.addKey(Phaser.Input.Keyboard.KeyCodes.BACKSPACE).isDown&&this.battery_count>0?(this.rechargeTimer+=i,this.rechargeTimer>=this.rechargeInterval&&this.useBattery()):this.rechargeTimer=this.rechargeInterval,!this.isTransitioning&&this.input.keyboard&&this.input.keyboard.addKey(Phaser.Input.Keyboard.KeyCodes.ENTER).isDown&&this.bomb_count>0?(this.bomb_placement_delay_timer+=i,this.bomb_placement_delay_timer>=this.bomb_placement_delay&&0==this.bomb_active_positions.filter((t=>t.x===this.player.x&&t.y===this.player.y)).length&&(this.placeBomb(),this.bomb_placement_delay_timer=0)):this.bomb_placement_delay_timer=this.bomb_placement_delay,!this.isTransitioning&&this.input.keyboard&&this.input.keyboard.addKey(Phaser.Input.Keyboard.KeyCodes.SPACE).isDown&&this.camera_count>0&&this.CAN_SPAWN&&this.useCamera(t),!this.isTransitioning&&!this.isDialogOpen&&this.isMoving&&this.input.activePointer.isDown&&0===this.input.activePointer.button){const t=Phaser.Math.Distance.Between(this.player.x,this.player.y,this.targetX,this.targetY);t<4&&this.updateTargetPosition(this.input.activePointer);const s=Phaser.Math.Angle.Between(this.player.x,this.player.y,this.targetX,this.targetY),e=new Phaser.Math.Vector2;if(e.setToPolar(s,this.PLAYER_SPEED),t<this.PLAYER_SPEED*(i/1e3)){const s=t/(this.PLAYER_SPEED*(i/1e3));e.scale(s)}this.player.setVelocity(e.x,e.y),this.playerSprite.setPosition(this.player.x,this.player.y)}else(this.isTransitioning||this.input.activePointer.isDown)&&0===this.input.activePointer.button||(this.isMoving=!1,this.player.setVelocity(0,0),this.playerSprite.setPosition(this.player.x,this.player.y));this.updatePlayerAnimation(t),this.updateKeysUI(),this.updateBombsUI(),this.updateCameraUI(),this.handleExit(),0===this.wallsToAdd.length&&this.wallsToRemove.length<50&&this.removeSomeConnections(),0===this.wallsToRemove.length&&this.connectUnconnectedRooms(),this.player&&this.player.body&&this.mask&&this.batteries&&this.batteries.getChildren().forEach((t=>{t.setMask(this.mask)})),this.followPlayer()}useBattery(){this.battery_count>0&&this.flashlightBattery<100&&(this.rechargeTimer=0,this.playSound("recharge",{volume:.6}),this.battery_count--,this.updateBatteriesUI(),this.flashlightBattery=100,this.showPlayerEventText("Recharge"))}updatePlayerAnimation(t){var i;if(this.isDialogOpen)return void this.player.setVelocity(0,0);if(0==this.transitionStart&&(this.transitionStart=t),this.playerHitPoints<=0)return this.playerSprite.setTexture("player_dead"),this.playerSprite.setAlpha(1),this.playerSprite.setTint(16777215),void(this.sister_following&&(this.sister_sprite.setTexture("sister_dead"),this.sister_sprite.setAlpha(1),this.sister_sprite.setTint(16777215)));if(!(null==(i=this.player)?void 0:i.body)||!this.playerSprite)return;this.isTransitioning&&!this.GOING_BACK?(this.player.setVelocity(2,0),this.playerSprite.setPosition(this.player.x+5e-4*(t-this.transitionStart),this.player.y+5e-4*(t-this.transitionStart))):this.isTransitioning&&this.GOING_BACK&&(this.player.setVelocity(-2,0),this.playerSprite.setPosition(this.player.x- -5e-4*(t-this.transitionStart),this.player.y- -5e-4*(t-this.transitionStart)));const s=this.player.body.velocity,e=Math.sqrt(s.x*s.x+s.y*s.y);if(this.isMoving=e>0,Math.abs(s.x)>Math.abs(s.y)?s.x>0?this.lastDirection="right":s.x<0&&(this.lastDirection="left"):Math.abs(s.y)>0&&(s.y>0?this.lastDirection="down":this.lastDirection="up"),this.isMoving){t>this.frameTime&&(this.currentFrame=0===this.currentFrame?1:0,this.frameTime=t+this.frameDuration,0==this.currentFrame&&this.playSound("footstep",{volume:.3}));const i=this.currentFrame+1;switch(this.lastDirection){case"down":this.playerSprite.setTexture(`player_down_walk${i}`),this.playerSprite.setFlipX(!1),this.sister_following&&(this.sister_sprite.setTexture(`sister_down_walk${i}`),this.sister_sprite.setFlipX(!1));break;case"up":this.playerSprite.setTexture(`player_up_walk${i}`),this.playerSprite.setFlipX(!1),this.sister_following&&(this.sister_sprite.setTexture(`sister_up_walk${i}`),this.sister_sprite.setFlipX(!1));break;case"left":this.playerSprite.setTexture(`player_left_walk${i}`),this.playerSprite.setFlipX(!1),this.sister_following&&(this.sister_sprite.setTexture(`sister_left_walk${i}`),this.sister_sprite.setFlipX(!1));break;case"right":this.playerSprite.setTexture(`player_left_walk${i}`),this.playerSprite.setFlipX(!0),this.sister_following&&(this.sister_sprite.setTexture(`sister_left_walk${i}`),this.sister_sprite.setFlipX(!0))}}else switch(this.lastDirection){case"down":this.playerSprite.setTexture("player_down_idle"),this.playerSprite.setFlipX(!1),this.sister_following&&(this.sister_sprite.setTexture("sister_down_idle"),this.sister_sprite.setFlipX(!1));break;case"up":this.playerSprite.setTexture("player_up_idle"),this.playerSprite.setFlipX(!1),this.sister_following&&(this.sister_sprite.setTexture("sister_up_idle"),this.sister_sprite.setFlipX(!1));break;case"left":this.playerSprite.setTexture("player_left_idle"),this.playerSprite.setFlipX(!1),this.sister_following&&(this.sister_sprite.setTexture("sister_left_idle"),this.sister_sprite.setFlipX(!1));break;case"right":this.playerSprite.setTexture("player_left_idle"),this.playerSprite.setFlipX(!0),this.sister_following&&(this.sister_sprite.setTexture("sister_left_idle"),this.sister_sprite.setFlipX(!0))}}updateBatteryMeter(t,i){const s=t||this.scale.width,e=i||this.scale.height,h=s-this.BATTERY_METER_WIDTH-20,a=e-this.BATTERY_METER_HEIGHT-20;this.batteryMeterGraphics.clear(),this.batteryMeterGraphics.fillStyle(0),this.batteryMeterGraphics.fillRect(h,a,this.BATTERY_METER_WIDTH,this.BATTERY_METER_HEIGHT),this.batteryMeterGraphics.lineStyle(2,16777215),this.batteryMeterGraphics.strokeRect(h,a,this.BATTERY_METER_WIDTH,this.BATTERY_METER_HEIGHT);const r=(this.BATTERY_METER_WIDTH-2*this.BATTERY_METER_PADDING)*(this.flashlightBattery/100);this.batteryMeterGraphics.fillStyle(16777215),this.batteryMeterGraphics.fillRect(h+this.BATTERY_METER_PADDING,a+this.BATTERY_METER_PADDING,r,this.BATTERY_METER_HEIGHT-2*this.BATTERY_METER_PADDING),this.batteryMeterGraphics.lineStyle(1,16777215);for(let o=1;o<4;o++){const t=h+this.BATTERY_METER_WIDTH*(.25*o);this.batteryMeterGraphics.beginPath(),this.batteryMeterGraphics.moveTo(t,a),this.batteryMeterGraphics.lineTo(t,a+this.BATTERY_METER_HEIGHT),this.batteryMeterGraphics.strokePath()}this.batteryText.setText(`${Math.round(this.flashlightBattery)}%`),this.batteryText.setPosition(h+this.BATTERY_METER_WIDTH/2-this.batteryText.width/2,a+this.BATTERY_METER_HEIGHT/2-this.batteryText.height/2),this.flashlightBattery<=0&&(this.battery_count>0?this.useBattery():this.max_ghosts=10)}updateBatteriesUI(){this.battery_sprite.setVisible(this.battery_count>0),this.batteryCountText.setVisible(this.battery_count>0),this.batteryCountText.setText(`${this.battery_count}`)}updateKeysUI(){this.key_sprite.setVisible(this.key_count>0),this.keyCountText.setVisible(this.key_count>0),this.keyCountText.setText(`${this.key_count}`)}updateBombsUI(){this.bomb_sprite.setVisible(this.bomb_count>0),this.bombCountText.setVisible(this.bomb_count>0),this.bombCountText.setText(`${this.bomb_count}`)}updateCameraUI(){this.camera_count_text.setText(`${this.camera_count}`),this.camera_sprite.setVisible(this.camera_count>0),this.camera_count_text.setVisible(this.camera_count>0)}updateFlashlight(t){this.updateBatteriesUI(),t-this.flashLightBatteryCycleTimer>this.flashLightBatteryCycle&&(this.flashlightBattery>0?this.flashlightBattery-=1:this.flashlightBattery=0,this.flashLightBatteryCycleTimer=t,this.updateBatteryMeter()),!this.isTransitioning&&this.playerHitPoints>0&&(this.playerDimLightZone=this.flashlightMaxDistance*(this.flashlightBattery/100),this.playerBrightLightZone=this.flashlightMinDistance*(this.flashlightBattery/100)),this.playerHitPoints<=0&&(this.playerDimLightZone=0,this.playerBrightLightZone=0)}playerTakeDamage(){if(this.isTransitioning)return;this.playerHitPoints--,this.playSound("hurt",{volume:.5});const t=this.add.particles(this.player.x,this.player.y,"ghost_1",{speed:{min:50,max:200},scale:{start:.2,end:.05},alpha:{start:.8,end:0},lifespan:{min:400,max:600},blendMode:"MULTIPLY",tint:16711680,quantity:20,angle:{min:0,max:360},emitting:!1});this.mask&&t.setMask(this.mask),this.uiCamera&&this.uiCamera.ignore(t),t.explode(30),this.time.delayedCall(600,(()=>{t.destroy()})),this.playerSprite.setTint(16711680),this.playerSprite.setAlpha(.75),this.showPlayerEventText("Hit!","#ff0000"),this.cameras.main.shake(200,.01),this.time.delayedCall(this.playerInvincibilityDuration,(()=>{this.playerSprite.setAlpha(1),this.playerSprite.clearTint()})),this.updatePlayerHealthUI(),this.playerHitPoints<=0&&(this.playerHitPoints=0,this.playerSprite.setTexture("player_dead"),this.tweens.add({targets:this.cameras.main,zoom:30,duration:7e3,onComplete:()=>{this.showDialog("You are dead! Game over!","Darn...",(()=>{this.resetGame()}))}}))}updatePlayerHealthUI(){6==this.playerHitPoints?(this.health_sprite3.setTexture("heart_full"),this.health_sprite2.setTexture("heart_full"),this.health_sprite.setTexture("heart_full")):5==this.playerHitPoints?this.health_sprite.setTexture("heart_half"):this.playerHitPoints<5?this.health_sprite3.setTexture("heart_empty"):this.health_sprite3.setTexture("heart_full"),3==this.playerHitPoints?this.health_sprite2.setTexture("heart_half"):this.playerHitPoints<3?this.health_sprite2.setTexture("heart_empty"):this.health_sprite2.setTexture("heart_full"),1==this.playerHitPoints?this.health_sprite.setTexture("heart_half"):this.playerHitPoints<1?this.health_sprite.setTexture("heart_empty"):this.health_sprite.setTexture("heart_full")}resetGame(){this.scene.start("MainMenu"),this.playerHitPoints=this.PLAYER_MAX_HIT_POINTS,this.flashlightBattery=100,this.battery_count=0,this.key_count=0,this.bomb_count=0,this.camera_count=0,this.gameTimer=0,this.music.stop()}spawnGoblins(){if(!this.CAN_SPAWN)return;const t=this.max_goblins-this.goblin_count,i=[...this.rooms].sort((()=>Math.random()-.5));for(let s=0;s<t&&s<i.length;s++){const t=i[s],e=1,h=Phaser.Math.Between(t.x+2*e,t.x+t.width-2*e)*this.CELL_SIZE+this.CELL_SIZE/2,a=Phaser.Math.Between(t.y+2*e,t.y+t.height-2*e)*this.CELL_SIZE+this.CELL_SIZE/2;if(!(Phaser.Math.Distance.Between(h,a,this.player.x,this.player.y)<200||Phaser.Math.Distance.Between(h,a,this.entranceX,this.entranceY)<200)){const t=this.goblin_group.create(h,a,"goblin_1");this.goblin_count++,t.setDepth(5),t.setMask(this.mask),this.physics.add.collider(t,this.wallGroup),t.setCollideWorldBounds(!0),t.setCircle(8),this.goblin_animation_delays.push(Phaser.Math.Between(700,1e3))}}this.physics.add.collider(this.goblin_group,this.goblin_group)}updateGoblins(t){if(0==this.max_goblins)return;if(this.isDialogOpen||this.isTransitioning)return void this.goblin_group.getChildren().forEach((t=>{t.active=!1,t.setVelocity(0,0)}));this.goblin_count<this.max_goblins&&this.spawnGoblins(),this.goblin_count!==this.goblin_group.getChildren().length&&(this.goblin_count=this.goblin_group.getChildren().length);for(let s=0;s<this.goblin_count;s++){const i=this.goblin_group.getChildren()[s];if(i){const e=this.goblin_animation_delays[s];t%e<e/2?i.setTexture("goblin_1"):i.setTexture("goblin_2")}}const i=[];this.goblin_group.getChildren().forEach((s=>{const e=s;this.uiCamera.ignore(e);const h=Phaser.Math.Distance.Between(e.x,e.y,this.player.x,this.player.y);if(this.isInBrightLight(e.x,e.y)){e.getData("isRunning")||(this.playSound("goblin",{volume:.5}),e.setData("isRunning",!0));const t=this.player.x-e.x,i=this.player.y-e.y,s=Math.sqrt(t*t+i*i),a=t/s,r=i/s;let o=Math.max(50,100-h/10);e.setVelocity(a*-o*2,r*-o*2)}else if(t%3==0&&e.setData("isRunning",!1),h<1e3){const r=Math.floor(e.x/this.CELL_SIZE),o=Math.floor(e.y/this.CELL_SIZE);if(this.playerVisitedTiles.includes({x:r,y:o})){var a=this.playerVisitedTiles.indexOf({x:r,y:o});const t=this.playerVisitedTiles[a+1],i=t.x-e.x,s=t.y-e.y,h=Math.sqrt(i*i+s*s),n=i/h,l=s/h;e.setVelocity(50*n,50*l)}else if(h>10&&s.active&&!this.isTransitioning&&this.playerHitPoints>0){const t=this.player.x-e.x,i=this.player.y-e.y,s=Math.sqrt(t*t+i*i),a=t/s,r=i/s;let o=Math.max(50,100-h/10);e.setVelocity(a*o,r*o)}else if(h<10&&s.active&&t-this.playerLastHitTime>this.playerInvincibilityDuration)return this.playerTakeDamage(),this.playerLastHitTime=t,void i.push({goblin:s,sprite:e})}else e.setVelocity(Phaser.Math.Between(-10,10),Phaser.Math.Between(-10,10))})),i.length>0&&i.forEach((({goblin:t,sprite:i})=>{this.destroyGoblin(t,i)}))}updateGhosts(t){if(0==this.max_ghosts)return;if(this.isDialogOpen||this.isTransitioning)return void this.ghost_group.getChildren().forEach((t=>{t.setVelocity(0,0)}));this.ghost_count<this.max_ghosts&&this.spawnGhosts(),this.ghost_count!==this.ghost_group.getChildren().length&&(this.ghost_count=this.ghost_group.getChildren().length);for(let s=0;s<this.ghost_count;s++){const i=this.ghost_group.getChildren()[s];if(i){const e=this.ghost_animation_delays[s];t%e<e/2?i.setTexture("ghost_1"):i.setTexture("ghost_2")}}const i=[];this.ghost_group.getChildren().forEach((s=>{const e=s;this.uiCamera.ignore(e);const h=Phaser.Math.Distance.Between(e.x,e.y,this.player.x,this.player.y);if(this.isInBrightLight(e.x,e.y))return i.push({ghost:s,sprite:e}),void(s.active=!1);if((h<1e3||this.flashlightBattery<=0)&&this.playerHitPoints>0){e.getData("isFollowing")||(this.playSound("ghost",{volume:.5}),e.setData("isFollowing",!0));const a=this.player.x-e.x,r=this.player.y-e.y,o=Math.sqrt(a*a+r*r),n=a/o,l=r/o;let d=Math.max(50,100-h/10);if(e.setVelocity(n*d,l*d),h<10&&s.active&&!this.isTransitioning&&this.playerHitPoints>0&&t-this.playerLastHitTime>this.playerInvincibilityDuration)return this.playerTakeDamage(),this.playerLastHitTime=t,void i.push({ghost:s,sprite:e})}else e.setVelocity(Phaser.Math.Between(-10,10),Phaser.Math.Between(-10,10))})),i.length>0&&i.forEach((({ghost:t,sprite:i})=>{this.destroyGhost(t,i)}))}destroyGoblin(t,i){if(this.playSound("goblin_death",{volume:.7}),t.destroy(),this.tweens.getTweensOf(i).length>0)return;this.goblin_count<=0&&(this.goblin_count=Math.max(1,this.goblin_group.getChildren().length));const s=i.x,e=i.y,h=this.add.particles(s,e,"goblin_1",{speed:{min:50,max:150},scale:{start:.4,end:.1},alpha:{start:.8,end:0},lifespan:800,blendMode:"ADD",quantity:15,rotate:{min:0,max:360},emitting:!1});this.mask&&h.setMask(this.mask),this.uiCamera&&this.uiCamera.ignore(h),h.explode(20),i.setTint(16777215);const a=this.add.graphics();a.setDepth(i.depth-1),this.mask&&a.setMask(this.mask),this.uiCamera&&this.uiCamera.ignore(a),this.tweens.add({targets:{radius:0,alpha:.7},radius:50,alpha:0,duration:500,onUpdate:(t,i)=>{a.clear(),a.lineStyle(3,16777215,i.alpha),a.strokeCircle(s,e,i.radius)},onComplete:()=>{a.destroy(),t.destroy(),this.goblin_count=Math.max(0,this.goblin_count-1)}}),this.tweens.add({targets:i,alpha:0,scale:0,duration:500,onComplete:()=>{i.destroy(),this.time.delayedCall(800,(()=>{h.destroy()}))}})}spawnGhosts(){if(!this.CAN_SPAWN)return;const t=this.max_ghosts-this.ghost_count,i=[...this.rooms].sort((()=>Math.random()-.5));for(let s=0;s<t&&s<i.length;s++){const t=i[s],e=1,h=Phaser.Math.Between(t.x+2*e,t.x+t.width-2*e)*this.CELL_SIZE+this.CELL_SIZE/2,a=Phaser.Math.Between(t.y+2*e,t.y+t.height-2*e)*this.CELL_SIZE+this.CELL_SIZE/2;if(!(Phaser.Math.Distance.Between(h,a,this.player.x,this.player.y)<200||Phaser.Math.Distance.Between(h,a,this.entranceX,this.entranceY)<200)){const t=this.ghost_group.create(h,a,"ghost_1");this.ghost_count++,t.setDepth(5),t.setCollideWorldBounds(!0),t.setCircle(8),this.ghost_animation_delays.push(Phaser.Math.Between(700,1e3))}}this.physics.add.collider(this.ghost_group,this.ghost_group)}destroyGhost(t,i){if(this.playSound("ghost_death",{volume:1}),t.destroy(),this.tweens.getTweensOf(i).length>0)return;this.ghost_count<=0&&(this.ghost_count=Math.max(1,this.ghost_group.getChildren().length));const s=i.x,e=i.y,h=this.add.particles(s,e,"ghost_1",{speed:{min:50,max:150},scale:{start:.4,end:.1},alpha:{start:.8,end:0},lifespan:800,blendMode:"ADD",quantity:15,rotate:{min:0,max:360},emitting:!1});this.mask&&h.setMask(this.mask),this.uiCamera&&this.uiCamera.ignore(h),h.explode(20),i.setTint(16777215);const a=this.add.graphics();a.setDepth(i.depth-1),this.mask&&a.setMask(this.mask),this.uiCamera&&this.uiCamera.ignore(a),this.tweens.add({targets:{radius:0,alpha:.7},radius:50,alpha:0,duration:500,onUpdate:(t,i)=>{a.clear(),a.lineStyle(3,16777215,i.alpha),a.strokeCircle(s,e,i.radius)},onComplete:()=>{a.destroy(),t.destroy(),this.ghost_count=Math.max(0,this.ghost_count-1)}}),this.tweens.add({targets:i,alpha:0,scale:0,duration:500,onComplete:()=>{i.destroy(),this.time.delayedCall(800,(()=>{h.destroy()}))}})}followPlayer(){if(this.GOING_BACK&&this.sister_following&&this.sister_game_object&&this.sister_sprite){const t=this.player.x-this.sister_game_object.x,i=this.player.y-this.sister_game_object.y,s=Math.sqrt(t*t+i*i);if(s>0){const e=t/s,h=i/s;let a=100;s<10?a=0:s>32&&(a=200),this.sister_game_object.setVelocity(e*a,h*a)}else this.sister_game_object.setVelocity(0,0);this.sister_sprite.setPosition(this.sister_game_object.x,this.sister_game_object.y),console.log("Sister position: "+this.sister_game_object.x+", "+this.sister_game_object.y),this.sister_sprite.clearMask()}}spawnItems(){if(this.GOING_BACK)return;this.batteries.clear(!0,!0),this.battery_positions=[],this.keys.clear(!0,!0),this.key_positions=[],this.camera_items.clear(!0,!0),this.camera_items_positions=[],this.bombs.clear(!0,!0),this.bomb_positions=[];let t=0;this.currentLevel>=this.key_starting_level&&(t=Phaser.Math.Between(this.MIN_KEYS_PER_LEVEL,this.MAX_KEYS_PER_LEVEL));let i=0;this.currentLevel>=this.bomb_starting_level&&(i=Phaser.Math.Between(this.MIN_BOMBS_PER_LEVEL,this.MAX_BOMBS_PER_LEVEL));let s=0;this.currentLevel>=this.camera_starting_level&&(s=Phaser.Math.Between(this.MIN_CAMERA_COUNT,this.MAX_CAMERA_COUNT));let e=Phaser.Math.Between(this.MIN_BATTERIES_PER_LEVEL,this.MAX_BATTERIES_PER_LEVEL);const h=[...this.rooms].sort((()=>Math.random()-.5)),a=this.rooms.find((t=>t.x<=this.player.x/this.CELL_SIZE&&t.x+t.width>this.player.x/this.CELL_SIZE&&t.y<=this.player.y/this.CELL_SIZE&&t.y+t.height>this.player.y/this.CELL_SIZE));this.notes.length>this.currentLevel&&a&&(this.spawnItem(a,"Note"),h.splice(h.indexOf(a),1));for(let r=0;r<e&&r<h.length;r++){const t=h.pop();t&&this.spawnItem(t,"Battery")}for(let r=0;r<t&&r<h.length;r++){const t=h.pop();t&&this.spawnItem(t,"Key")}for(let r=0;r<i&&r<h.length;r++){const t=h.pop();t&&this.spawnItem(t,"Bomb")}for(let r=0;r<s&&r<h.length;r++){const t=h.pop();t&&this.spawnItem(t,"Camera")}}spawnItem(t,i){const s=Phaser.Math.Between(t.x+2,t.x+t.width-2)*this.CELL_SIZE+this.CELL_SIZE/2,e=Phaser.Math.Between(t.y+2,t.y+t.height-2)*this.CELL_SIZE+this.CELL_SIZE/2;let h;"Battery"==i?(h=this.batteries.create(s,e,"battery"),this.battery_positions.push({x:Math.floor(s/this.CELL_SIZE),y:Math.floor(e/this.CELL_SIZE)})):"Note"==i?(this.notes.length>this.currentLevel?this.note=this.physics.add.sprite(s,e,"note"):this.note=this.physics.add.sprite(s,e,"hugging_skeletons"),this.noteText=this.notes[this.currentLevel-1],this.note.setDepth(5),h=this.note,this.physics.add.overlap(this.player,this.note,this.readNote,void 0,this),this.uiCamera.ignore(h)):"Bomb"==i?(h=this.bombs.create(s,e,"bomb_inactive"),this.bomb_positions.push({x:Math.floor(s/this.CELL_SIZE),y:Math.floor(e/this.CELL_SIZE)})):"Camera"==i?(h=this.camera_items.create(s,e,"camera"),this.camera_items_positions.push({x:Math.floor(s/this.CELL_SIZE),y:Math.floor(e/this.CELL_SIZE)})):(h=this.keys.create(s,e,"key"),this.key_positions.push({x:Math.floor(s/this.CELL_SIZE),y:Math.floor(e/this.CELL_SIZE)})),h.setDepth(5),this.mask&&h.setMask(this.mask),this.tweens.add({targets:h,y:e-5,duration:1500,yoyo:!0,repeat:-1,ease:"Sine.easeInOut"})}placeBomb(){let t;console.log("Placing bomb"),t=this.bombs_active.create(this.player.x,this.player.y,"bomb_active_1"),t.setDepth(5),this.uiCamera.ignore(t),this.bomb_active_positions.push({x:Math.floor(this.player.x/this.CELL_SIZE),y:Math.floor(this.player.y/this.CELL_SIZE),time:1,bomb:t})}updateBombsActive(){for(const t of this.bomb_active_positions)t.time++,t.time>3?this.bombExplode(t):t.bomb.setTexture("bomb_active_"+t.time);this.bomb_active_positions=this.bomb_active_positions.filter((t=>t.time<=3))}bombExplode(t){this.playSound("explosion",{volume:.8}),t.bomb.destroy();const i=t.x*this.CELL_SIZE+this.CELL_SIZE/2,s=t.y*this.CELL_SIZE+this.CELL_SIZE/2;this.cameras.main.shake(300,.01);const e=this.add.graphics();e.fillStyle(16746496,.8),e.fillCircle(i,s,this.bomb_explosion_radius),e.fillStyle(16776960,.6),e.fillCircle(i,s,.7*this.bomb_explosion_radius),e.fillStyle(16777215,.4),e.fillCircle(i,s,.4*this.bomb_explosion_radius),this.uiCamera.ignore(e);for(let a=0;a<20;a++){const t=this.add.graphics(),e=Phaser.Math.Between(3,8),h=Math.random()*Math.PI*2,a=Math.random()*this.bomb_explosion_radius,r=i+Math.cos(h)*a,o=s+Math.sin(h)*a;t.fillStyle(16755200,.8),t.fillCircle(r,o,e),this.mask&&t.setMask(this.mask),this.uiCamera.ignore(t),this.tweens.add({targets:t,alpha:0,x:r+50*Math.cos(h),y:o+50*Math.sin(h),duration:500,onComplete:()=>{t.destroy()}})}if(this.tweens.add({targets:e,alpha:0,duration:500,onComplete:()=>{e.destroy()}}),Phaser.Math.Distance.Between(i,s,this.player.x,this.player.y)<=this.bomb_explosion_radius){this.playerTakeDamage();const t=Phaser.Math.Angle.Between(i,s,this.player.x,this.player.y),e=200,h=Math.cos(t)*e,a=Math.sin(t)*e;this.player.setVelocity(h,a),this.showPlayerEventText("Bomb Damage!","#ff0000")}this.ghost_group.getChildren().forEach((t=>{const e=t;Phaser.Math.Distance.Between(i,s,e.x,e.y)<=this.bomb_explosion_radius&&(this.destroyGhost(t,e),this.showPlayerEventText("+100","#00ff00"))})),this.goblin_group.getChildren().forEach((t=>{const e=t;Phaser.Math.Distance.Between(i,s,e.x,e.y)<=this.bomb_explosion_radius&&(this.destroyGoblin(t,e),this.showPlayerEventText("+50","#00ff00"))}));const h=Math.ceil(this.bomb_explosion_radius/this.CELL_SIZE);for(let a=t.y-h;a<=t.y+h;a++)for(let i=t.x-h;i<=t.x+h;i++)if(i>=1&&i<this.GRID_SIZE-1&&a>=1&&a<this.GRID_SIZE-1&&Phaser.Math.Distance.Between(t.x,t.y,i,a)<=h&&i>0&&a>0&&i<this.GRID_SIZE-1&&a<this.GRID_SIZE-1){this.grid[a][i]&&this.removeTile(i,a);const t=this.lockedDoorPositions.find((t=>t.x===i&&t.y===a));t&&(this.removeLockedDoor(t.door),this.showPlayerEventText("Door Destroyed!","#ffaa00"))}this.redrawTile(),this.bomb_count--,this.updateBombsUI()}readNote(){this.playSound("note",{volume:.5}),this.showDialog(this.noteText,"Okay",(()=>{this.note.destroy()}))}addLockedDoor(t,i){const s=this.lockedDoors.create(t*this.CELL_SIZE+this.CELL_SIZE/2,i*this.CELL_SIZE+this.CELL_SIZE/2,"locked_door");s.setScale(2),s.setDepth(5),s.setImmovable(!0),s.body&&(s.body.setSize(this.CELL_SIZE/2,this.CELL_SIZE/2),s.body.reset(t*this.CELL_SIZE+this.CELL_SIZE/2,i*this.CELL_SIZE+this.CELL_SIZE/2)),this.lockedDoorPositions.push({x:Math.floor(t),y:Math.floor(i),door:s}),this.mask&&s.setMask(this.mask),this.uiCamera.ignore(s),this.physics.add.collider(this.player,s)}removeLockedDoor(t){t.destroy(),this.lockedDoorPositions=this.lockedDoorPositions.filter((i=>i.x!==t.x&&i.y!==t.y))}updateLockedDoors(){let t=[];for(const i of this.lockedDoorPositions)!this.grid[i.y][i.x]&&this.isValidLockedDoorPosition(i.x,i.y)||t.push(i.door);for(const i of t)this.removeLockedDoor(i)}showPlayerEventText(t,i="#ffff00"){const s=this.player.x,e=this.player.y-20,h=this.add.text(s,e,t,{fontSize:"16px",color:i,stroke:"#000000",strokeThickness:3});h.setDepth(100),this.uiCamera.ignore(h),this.tweens.add({targets:h,y:e-50,alpha:0,duration:1e3,onComplete:()=>{h.destroy()}})}handleBatteryCollection(t,i){this.playSound("item",{volume:.6}),i.destroy(),this.battery_count++,this.updateBatteriesUI(),this.showPlayerEventText("+1 Battery")}handleBombCollection(t,i){this.playSound("item",{volume:.6}),i.destroy(),this.bomb_count++,this.updateBombsUI(),this.showPlayerEventText("+1 Bomb")}handleKeyCollection(t,i){this.playSound("item",{volume:.6}),i.destroy(),this.key_count++,this.updateKeysUI(),this.showPlayerEventText("+1 Key")}handleCameraItemCollection(t,i){this.playSound("item",{volume:.6}),i.destroy(),this.camera_count++,this.updateCameraUI(),this.showPlayerEventText("+1 Camera")}handleLockedDoorInteraction(t,i){this.key_count>0&&(this.playSound("door",{volume:.8}),this.key_count--,this.updateKeysUI(),this.removeLockedDoor(i),this.showPlayerEventText("Unlocked!"),this.unlockedDoors++)}useCamera(t){if(this.camera_count>0&&t-this.camera_last_used>=this.camera_spawn_delay){this.playSound("camera",{volume:.7}),this.camera_last_used=t,this.camera_count--,this.updateCameraUI();const i=this.add.rectangle(0,0,1e5,1e5,16777215,1);this.cameras.main.ignore(i),this.tweens.add({targets:i,alpha:0,duration:this.camera_spawn_delay,onComplete:()=>{i.destroy()}}),this.ghost_group.clear(!0,!0),this.goblin_group.clear(!0,!0)}}shutdown(){this.isTransitioning=!1,this.isGeneratingLevel=!1,this.exitSequenceInProgress=!1,this.transitionPromise=null}createDialogSystem(){this.dialogContainer=this.add.container(0,0),this.dialogContainer.setDepth(2e3),this.dialogContainer.setVisible(!1);const t=this.add.rectangle(0,0,this.scale.width,this.scale.height,0,.7);t.setOrigin(0,0),this.dialogContainer.add(t),this.dialogBackground=this.add.graphics(),this.dialogContainer.add(this.dialogBackground),this.dialogText=this.add.text(0,0,"",{fontSize:"24px",color:"#ffffff",align:"center",wordWrap:{width:400}}),this.dialogText.setOrigin(.5),this.dialogContainer.add(this.dialogText),this.dialogButton=this.add.container(0,0),this.dialogContainer.add(this.dialogButton),this.uiCamera&&this.cameras.main.ignore(this.dialogContainer)}showDialog(t,i,s){if(this.isDialogOpen)return;this.previousTimeScale=this.time.timeScale,this.time.timeScale=0,this.isDialogOpen=!0,this.dialogText.setText(t);const e=40,h=Math.max(400,this.dialogText.width+80),a=60,r=this.dialogText.height+a+120,o=this.scale.width/2,n=this.scale.height/2;this.dialogBackground.clear(),this.dialogBackground.fillStyle(0,1),this.dialogBackground.fillRect(o-h/2,n-r/2,h,r),this.dialogBackground.lineStyle(4,16777215,1),this.dialogBackground.strokeRect(o-h/2,n-r/2,h,r),this.dialogText.setPosition(o,n-30),this.dialogButton.removeAll(!0);const l=this.add.graphics();l.fillStyle(3355443,1),l.fillRect(o-100,n+r/2-a-e,200,a),l.lineStyle(2,16777215,1),l.strokeRect(o-100,n+r/2-a-e,200,a),this.dialogButton.add(l);const d=this.add.text(o,n+r/2-30-e,i,{fontSize:"20px",color:"#ffffff"});d.setOrigin(.5),this.dialogButton.add(d);const p=this.add.zone(o,n+r/2-30-e,200,a);p.setInteractive(),p.setOrigin(.5),this.dialogButton.add(p),p.on("pointerover",(()=>{l.clear(),l.fillStyle(5592405,1),l.fillRect(o-100,n+r/2-a-e,200,a),l.lineStyle(2,16777215,1),l.strokeRect(o-100,n+r/2-a-e,200,a)})),p.on("pointerout",(()=>{l.clear(),l.fillStyle(3355443,1),l.fillRect(o-100,n+r/2-a-e,200,a),l.lineStyle(2,16777215,1),l.strokeRect(o-100,n+r/2-a-e,200,a)})),p.on("pointerdown",(()=>{this.closeDialog(),s&&s()})),this.dialogContainer.setVisible(!0)}closeDialog(){this.isDialogOpen&&(this.dialogContainer.setVisible(!1),this.time.timeScale=this.previousTimeScale,this.isDialogOpen=!1)}isInBrightLight(t,i){if(this.flashlightBattery<=0)return!1;if(Phaser.Math.Distance.Between(t,i,this.player.x,this.player.y)>this.playerBrightLightZone)return!1;const s=Phaser.Math.Angle.Between(this.player.x,this.player.y,t,i),e=Phaser.Math.Angle.Wrap(s-this.lastPlayerAngle),h=Phaser.Math.DegToRad(60);return Math.abs(e)<=h}removeTile(t,i){return!(t<0||t>=this.GRID_SIZE||i<0||i>=this.GRID_SIZE||!this.grid[i][t]||(this.grid[i][t]=!1,0))}updateTimerDisplay(){const t=Math.floor(this.gameTimer/60),i=Math.floor(this.gameTimer%60),s=t.toString().padStart(2,"0"),e=i.toString().padStart(2,"0");this.timerText.setText(`${s}:${e}`)}}const r={type:Phaser.AUTO,width:1024,height:768,parent:"game-container",backgroundColor:"#000000",antialias:!1,pixelArt:!0,physics:{default:"arcade",arcade:{gravity:{x:0,y:0},debug:!1}},scale:{mode:Phaser.Scale.FIT,autoCenter:Phaser.Scale.CENTER_BOTH},scene:[e,a]};new s.Game(r);
